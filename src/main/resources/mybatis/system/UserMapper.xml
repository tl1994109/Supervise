<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datcent.project.system.user.mapper.UserMapper">

    <resultMap type="User" id="UserResult">
        <id property="userId" column="user_id"/>
        <result property="deptId" column="dept_id"/>
        <result property="personId" column="person_id"/>
        <result property="loginName" column="login_name"/>
        <result property="userName" column="user_name"/>
        <result property="email" column="email"/>
        <result property="phonenumber" column="phonenumber"/>
        <result property="sex" column="sex"/>
        <result property="avatar" column="avatar"/>
        <result property="password" column="password"/>
        <result property="salt" column="salt"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="deptIds" column="dept_id"/>
        <association property="dept" column="dept_id" javaType="Dept" resultMap="deptResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="Dept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <resultMap id="RoleResult" type="Role">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <sql id="selectUserVo">
        SELECT  u.user_id,u.person_id, p.dept_id AS dept_id, u.login_name, p.person_name AS user_name, p.email AS email, 
		p.mobile_phone AS phonenumber, p.sex AS sex, u.avatar, u.password, u.salt, u.status, u.del_flag, 
		u.login_ip, u.login_date, u.create_time, u.remark,
		d.dept_id, d.parent_id, d.dept_name, d.order_num, d.status AS dept_status,
		r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status AS role_status
		FROM sys_user u
		LEFT JOIN sys_person p ON p.person_id=u.person_id
		LEFT JOIN sys_dept d ON p.dept_id = d.dept_id
		LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
		LEFT JOIN sys_role r ON r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="User" resultMap="UserResult">
        SELECT u.user_id,u.person_id, p.dept_id AS dept_id, u.login_name, p.person_name AS user_name, p.email AS email,
        p.mobile_phone AS phonenumber, p.sex AS sex, u.avatar, u.password, u.salt, u.status, u.del_flag,
        u.login_ip, u.login_date, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.status AS dept_status
        /*r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status AS role_status*/
        FROM sys_user u
        LEFT JOIN sys_person p ON p.person_id=u.person_id
        LEFT JOIN sys_dept d ON p.dept_id = d.dept_id
       /* LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id*/
        /*LEFT JOIN sys_role r ON r.role_id = ur.role_id*/
        WHERE u.del_flag = '0'
        <if test="loginName != null and loginName != ''">
            AND u.login_name like concat('%', #{loginName}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND p.mobile_phone like concat('%', #{phonenumber}, '%')
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0 and parentId!=null and parentId!=0">
            and (p.dept_id = #{deptId} or p.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{parentId},ancestors)))
        </if>
        <if test="deptId != null and deptId != 0 and (parentId==null or parentId==0)">
            and (p.dept_id = #{deptId} or p.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors)))
        </if>
        <!--<if test="roleId!=null and roleId!=''">
            and ur.role_id = #{roleId}
        </if>-->
        <if test="userName!=null and userName!=''">
            and u.user_name like concat('%',#{userName},'%')
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="selectUserByLoginName" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.login_name = #{userName} and u.del_flag = '0'
    </select>

    <select id="selectUserByPhoneNumber" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where p.phonenumber = #{phonenumber}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where p.email = #{email}
    </select>

    <select id="checkLoginNameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where login_name=#{loginName} and del_flag=0
	</select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="UserResult">
		select user_id, phonenumber from sys_user where phonenumber=#{phonenumber}
	</select>

    <select id="selectUserByPersonId" parameterType="String" resultMap="UserResult">
		select user_id from sys_user where del_flag=0 and person_id=#{personid} 
	</select>

    <select id="checkEmailUnique" parameterType="String" resultMap="UserResult">
		select user_id, email from sys_user where email=#{email}
	</select>

    <select id="selectUserById" parameterType="Long" resultMap="UserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>

    <delete id="deleteUserById" parameterType="Long">
 		delete from sys_user where user_id = #{userId}
 	</delete>

    <delete id="deleteUserByIds" parameterType="Long">
        update sys_user set del_flag = '2' where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <delete id="deleteUserByPersonIds" parameterType="Long">
        update sys_user set del_flag = '2' where person_id in
        <foreach collection="array" item="personId" open="(" separator="," close=")">
            #{personId}
        </foreach>
    </delete>

    <update id="updateUser" parameterType="User">
        update sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="personId != null">person_Id = #{personId},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="password != null">password = #{password},</if>
            <if test="salt != null">salt = #{salt},</if>
            <if test="status != null">status = #{status},</if>
            <if test="loginIp != null">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phonenumber != null">phonenumber = #{phonenumber},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="userName != null">user_name = #{userName},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <insert id="insertUser" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user(
        <if test="userId != null and userId != 0">user_id,</if>
        <if test="loginName != null and loginName != ''">login_name,</if>
        <if test="personId != null and personId != ''">person_Id,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="salt != null and salt != ''">salt,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="phonenumber != null and phonenumber != ''">phonenumber,</if>
        <if test="sex != null and sex != ''">sex,</if>
        <if test="userName != null and userName != ''">user_name,</if>
        create_time
        )values(
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="loginName != null and loginName != ''">#{loginName},</if>
        <if test="personId != null and personId != ''">#{personId},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="salt != null and salt != ''">#{salt},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
        <if test="sex != null and sex != ''">#{sex},</if>
        <if test="userName != null and userName != ''">#{userName},</if>
        sysdate()
        )
    </insert>

    <select id="selectUserListByDeptId" parameterType="String" resultMap="UserResult">
		SELECT u.user_id, u.dept_id, r.role_id,u.login_name, p.person_name as user_name, p.email as email,
		p.mobile_phone as phonenumber, u.password, p.sex as sex, u.avatar, u.salt, u.status,
		u.del_flag, u.login_ip, u.login_date, u.create_by,
		u.create_time, u.remark, d.dept_name
		FROM sys_user u
		LEFT JOIN sys_person p ON p.person_id=u.person_id
		LEFT JOIN sys_dept d ON p.dept_id = d.dept_id
		LEFT JOIN sys_user_role r on r.user_id = u.user_id
		LEFT JOIN sys_role sr on r.role_id = sr.role_id
		WHERE u.del_flag = '0' and p.dept_id in (SELECT dept_id from sys_dept where parent_id = (
		select parent_id from sys_dept where dept_id=#{deptId}) and dept_type = '1')
		and (sr.role_key='approve' or sr.role_key='admin')
	</select>

    <select id="selectUnallocatedList" parameterType="user" resultMap="UserResult">
        select distinct u.user_id, u.dept_id, u.login_name, u.user_name, u.email, u.phonenumber, u.status, u.create_time
        from sys_user u
        LEFT JOIN sys_person p on p.person_id = u.person_id
        left join sys_dept d on p.dept_id = d.dept_id
        left join sys_user_role ur on u.user_id = ur.user_id
        left join sys_role r on r.role_id = ur.role_id
        where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
        and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and
        ur.role_id = #{roleId})
        <if test="loginName != null and loginName != ''">
            AND u.login_name like concat('%', #{loginName}, '%')
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="deptId != null and deptId != 0 and parentId!=null and parentId!=0">
            and (d.dept_id = #{deptId} or d.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{parentId},ancestors)))
        </if>
        <if test="deptId != null and deptId != 0 and (parentId==null or parentId==0)">
            and (d.dept_id = #{deptId} or d.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors)))
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
    </select>

    <select id="queryFyidByDeptId" resultType="java.lang.String">
		SELECT  cid  from sys_court_organ where dept_id=(SELECT  parent_id  from   sys_court_organ  where  cid =#{id} and dept_type=2) and dept_type=1
	</select>

    <select id="queryAllUserByFyid" resultType="java.util.HashMap">
        SELECT   *  from  sys_court_organ where parent_id in ( SELECT  dept_id from sys_court_organ  where parent_id= (SELECT   dept_id from  sys_court_organ where cid=#{cid}) and dept_type=2) and dept_type=3
	</select>

    <select id="queryParentIdByDeptId" resultType="java.lang.String">

        SELECT  parent_id from sys_dept where dept_id=#{deptId}
        <if test="delFlag != null and delFlag != ''"> and del_flag like concat('%',#{delFlag},'%')</if>
    </select>
    
    <select id="queryDeptIdByParentId" resultType="java.lang.String">

        SELECT  dept_id from sys_dept where parent_id=#{parentId}
        <if test="delFlag != null and delFlag != ''"> and del_flag like concat('%',#{delFlag},'%')</if>
    </select>
    
    
    <select id="selectUserByDeptId" resultType="java.util.HashMap" >
        SELECT  u.*  from  sys_person p  LEFT JOIN sys_user u on  p.person_id=u.person_id where u.user_id IS  not  null  and  p.dept_id=#{deptId}
        <if test="delFlag != null and delFlag != ''"> and u.del_flag like concat('%',#{delFlag},'%')</if>
    </select>

    <select id="queryUserNameByUserId" resultType="java.lang.String">
        select  user_name from sys_user where user_id=#{id}
    </select>
    <select id="selectUserListByRoleId" parameterType="User" resultMap="UserResult">
         select u.user_id,u.person_id, p.dept_id AS dept_id, u.login_name, p.person_name AS user_name, p.email AS email,
        p.mobile_phone AS phonenumber, p.sex AS sex, u.avatar, u.password, u.salt, u.status, u.del_flag,
        u.login_ip, u.login_date, u.create_time, u.remark,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.status AS dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status AS role_status from (
            select * from sys_user_role r where r.role_id = #{roleId}) ur
            left join sys_user u on u.user_id = ur.user_id
						LEFT JOIN sys_person p ON p.person_id=u.person_id
						LEFT JOIN sys_dept d ON p.dept_id = d.dept_id
						LEFT JOIN sys_role r ON r.role_id = ur.role_id
						where u.user_id is not null
        <if test="deptId != null and deptId != 0 and parentId!=null and parentId!=0">
            and (p.dept_id = #{deptId} or p.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{parentId},ancestors)))
        </if>
        <if test="deptId != null and deptId != 0 and (parentId==null or parentId==0)">
            and (p.dept_id = #{deptId} or p.dept_id IN (SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors)))
        </if>
        <if test="loginName !=null and loginName!=''">
            and u.login_name like concat('%',#{loginName},'%')
        </if>
        <if test="phonenumber !=null and phonenumber!=''">
            and p.mobile_phone like concat('%',#{phonenumber},'%')
        </if>
    </select>
</mapper> 