<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datcent.project.system.dept.mapper.DeptMapper">

	<resultMap type="Dept" id="DeptResult">
		<id     property="deptId"     column="dept_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="deptName"   column="dept_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
		<result property="rank" column="rank" />
		<result property="deptType" column="dept_type" />
	</resultMap>
	
	<sql id="selectDeptVo">
        select d.dept_id, d.parent_id,d.rank, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time
        from sys_dept d
    </sql>
    
	<select id="selectRoleDeptTree" parameterType="Long" resultType="String">
		select concat(d.dept_id, d.dept_name) as dept_name
		from sys_dept d
			left join sys_role_dept rd on d.dept_id = rd.dept_id
		where d.del_flag = '0' and rd.role_id = #{roleId}
		order by d.parent_id, d.order_num
	</select>
	
	<select id="selectDeptList" parameterType="Dept" resultMap="DeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = '0'
		<if test="deptName != null and deptName != ''">
			AND dept_name like concat('%', #{deptName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="deptType != null and deptType != ''">
			AND dept_type = #{deptType}
		</if>
		<if test="deptId!=null and deptId !='' and parentId!=null and parentId !=''">
			and  (d.dept_id in (select substring_index(substring_index(a.ancestors,',',b.help_topic_id+1),',',-1) tag
			from (select DISTINCT ancestors from sys_dept where dept_id= #{deptId}) a join
			mysql.help_topic b
			on b.help_topic_id &lt; (length(a.ancestors) - length(replace(a.ancestors,',',''))+1)) or d.parent_id = #{parentId})
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
    </select>
	
	<select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where dept_id = #{deptId} and del_flag = '0'
	</select>
	
	<select id="selectDeptCount" parameterType="Dept" resultType="int">
		select count(1) from sys_dept
		where del_flag = '0'
		<if test="deptId != null and deptId != 0"> and dept_id = #{deptId} </if>
		<if test="parentId != null and parentId != 0"> and parent_id = #{parentId} </if>
	</select>
	
	<select id="checkDeptNameUnique" resultMap="DeptResult">
	    <include refid="selectDeptVo"/>
		where dept_name=#{deptName} and parent_id = #{parentId} and del_flag = '0'
	</select>

	<select id="selectDeptById" parameterType="Long" resultMap="DeptResult">
		select d.dept_id,d.rank, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select dept_name from sys_dept where dept_id = d.parent_id) parent_name
		from sys_dept d
		where d.dept_id = #{deptId}  and d.del_flag = '0'
	</select>
	
	<insert id="insertDept" parameterType="Dept">
 		insert into sys_dept(
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="deptName != null and deptName != ''">dept_name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null and orderNum != ''">order_num,</if>
 			<if test="leader != null and leader != ''">leader,</if>
 			<if test="phone != null and phone != ''">phone,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="status != null">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
			<if test="rank != null and rank != ''">rank,</if>
		<if test="deptType != null and deptType != ''">dept_type,</if>
 			create_time
 		)values(
 			<if test="deptId != null and deptId != 0">#{deptId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="deptName != null and deptName != ''">#{deptName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null and orderNum != ''">#{orderNum},</if>
 			<if test="leader != null and leader != ''">#{leader},</if>
 			<if test="phone != null and phone != ''">#{phone},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="status != null">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="rank != null and rank != ''">#{rank},</if>
		<if test="deptType != null and deptType != ''">#{deptType},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="Dept">
 		update sys_dept
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="deptName != null">dept_name = #{deptName},</if>
 			<if test="ancestors != null">ancestors = #{ancestors},</if>
 			<if test="orderNum != null">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null">status = #{status},</if>
 			<if test="updateBy != null">update_by = #{updateBy},</if>
			<if test="rank != null">rank = #{rank},</if>
 			update_time = sysdate()
 		</set>
 		where dept_id = #{deptId}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_dept set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case dept_id" close="end">
	        when #{item.deptId} then #{item.ancestors}
	    </foreach>
	    where dept_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.deptId}
	    </foreach>
	 </update>

	<delete id="deleteDeptById" parameterType="Long">
		update sys_dept set del_flag = '2' where dept_id = #{deptId}
	</delete>
	<select id="selectDeptListByParentId" parameterType="String" resultMap="DeptResult">
		<include refid="selectDeptVo"/>
		where d.parent_id = #{parentId} and del_flag = '0'
	</select>
</mapper> 